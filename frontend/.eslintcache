[{"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\index.js":"1","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\protectedroute.js":"2","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\updateForm.js":"4","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\profile.js":"5","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\list.js":"6","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\addUser.js":"7","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\projects.js":"8","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\pricing.js":"9","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\billing.js":"10","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\projectDetails.js":"11","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\signin\\signin.js":"12","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\register\\register.js":"13","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\forgetpass\\ForgetPass.js":"14","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\changepass\\ChangePass.js":"15","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\AddProject.js":"16","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\index.js":"17","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\validationSchemaFor.js":"18","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\MyStoreCheckout.js":"19","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\register\\validationSchema.js":"20","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\signin\\validationSchema.js":"21","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\changepass\\validationSchema.js":"22","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\forgetpass\\validationSchema.js":"23","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\AttatchFileIcon.jsx":"24","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\Chart.js":"25","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\CheckoutForm.js":"26","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\shared\\layout\\DashaboardLayout\\index.js":"27","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\CardSection.js":"28","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\SideNav.js":"29"},{"size":3017,"mtime":1615317332994,"results":"30","hashOfConfig":"31"},{"size":580,"mtime":1615120305000,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1615120305000,"results":"33","hashOfConfig":"31"},{"size":21028,"mtime":1615615998311,"results":"34","hashOfConfig":"31"},{"size":11525,"mtime":1615613926726,"results":"35","hashOfConfig":"31"},{"size":4163,"mtime":1615242803839,"results":"36","hashOfConfig":"31"},{"size":20474,"mtime":1615615998311,"results":"37","hashOfConfig":"31"},{"size":5925,"mtime":1615524988218,"results":"38","hashOfConfig":"31"},{"size":3560,"mtime":1615120305000,"results":"39","hashOfConfig":"31"},{"size":2486,"mtime":1615120305000,"results":"40","hashOfConfig":"31"},{"size":7701,"mtime":1615525823281,"results":"41","hashOfConfig":"31"},{"size":8228,"mtime":1615613926737,"results":"42","hashOfConfig":"31"},{"size":18885,"mtime":1615613926734,"results":"43","hashOfConfig":"31"},{"size":2792,"mtime":1615613926730,"results":"44","hashOfConfig":"31"},{"size":5955,"mtime":1615120305000,"results":"45","hashOfConfig":"31"},{"size":4190,"mtime":1615613926717,"results":"46","hashOfConfig":"31"},{"size":4790,"mtime":1615613926724,"results":"47","hashOfConfig":"31"},{"size":398,"mtime":1615120305000,"results":"48","hashOfConfig":"31"},{"size":318,"mtime":1615120305000,"results":"49","hashOfConfig":"31"},{"size":575,"mtime":1615120305000,"results":"50","hashOfConfig":"31"},{"size":195,"mtime":1615120305000,"results":"51","hashOfConfig":"31"},{"size":243,"mtime":1615120305000,"results":"52","hashOfConfig":"31"},{"size":177,"mtime":1615120305000,"results":"53","hashOfConfig":"31"},{"size":788,"mtime":1615120305000,"results":"54","hashOfConfig":"31"},{"size":2210,"mtime":1615613926720,"results":"55","hashOfConfig":"31"},{"size":3855,"mtime":1615120305000,"results":"56","hashOfConfig":"31"},{"size":2317,"mtime":1615120305000,"results":"57","hashOfConfig":"31"},{"size":301,"mtime":1615120305000,"results":"58","hashOfConfig":"31"},{"size":4154,"mtime":1615242652984,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1v0vlv8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"63"},"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\index.js",["133"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Signin from '../src/signin/signin';\r\nimport Register from '../src/register/register';\r\nimport ForgetPass from '../src/forgetpass/ForgetPass';\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\";\r\nimport ProtectedRoute from \"./protectedroute\";\r\nimport ChangePass from './changepass/ChangePass';\r\nimport Dashboard from './dashboard';\r\nimport UsersList from './dashboard/list';\r\nimport AddUser from './dashboard/addUser';\r\nimport UpdateUser from './dashboard/updateForm';\r\nimport UserProfile from './dashboard/profile';\r\nimport PricingPlans from './dashboard/pricing';\r\nimport Billing from './dashboard/billing';\r\nimport ProjectsList from './dashboard/projects';\r\nimport AddProject from './dashboard/AddProject';\r\nimport ProjectDetails from './dashboard/projectDetails';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <React.StrictMode>\r\n            <Switch>\r\n                <Route path=\"/\" exact={true} component={Signin}/>\r\n                <Route path=\"/forgetpass\" exact={true} component={ForgetPass}/>\r\n                <Route path=\"/register\" exact={true} component={Register}/>\r\n                <Route path=\"/dashboard\" exact={true} component={Dashboard}/>\r\n                <ProtectedRoute path=\"/list\" exact={true} component={UsersList}/>\r\n                <ProtectedRoute path=\"/addUser\" exact={true} component={AddUser}/>\r\n                <ProtectedRoute path=\"/updateform\" exact={true} component={UpdateUser}/>\r\n                <ProtectedRoute path=\"/profile\" exact={true} component={UserProfile}/>\r\n                <ProtectedRoute path=\"/pricing\" exact={true} component={PricingPlans}/>\r\n                <ProtectedRoute path=\"/billing\" exact={true} component={Billing}/>\r\n                <ProtectedRoute path=\"/projects\" exact={true} component={ProjectsList}/>\r\n                <ProtectedRoute path=\"/projectDetails\" exact={true} component={ProjectDetails}/>\r\n                <ProtectedRoute path=\"/addProject\" exact={true} component={AddProject}/>\r\n                <ProtectedRoute path=\"/projectDetails/:id\" exact={true} component={ProjectDetails} />\r\n                <Route path=\"/changePassword\" exact={true} component={ChangePass}/>\r\n                <Route exact path=\"/\">\r\n                    <Redirect exact from=\"/\" to=\"dashboard\"/>\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <Redirect from=\"/\" to=\"dashboard\"/>\r\n                </Route>\r\n\r\n            </Switch>\r\n        </React.StrictMode>\r\n\r\n    </Router>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["134","135"],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\protectedroute.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\updateForm.js",["136","137","138","139","140","141"],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\profile.js",["142","143"],"import React, {useEffect, useState} from 'react';\r\nimport {Formik} from \"formik\";\r\nimport \"./style.scss\";\r\nimport validationSchemaFor1 from \"./validationSchemaFor\";\r\nimport axios from 'axios';\r\nimport DashboardLayout from '../shared/layout/DashaboardLayout';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Profile = (props) => {\r\n    let user1 = JSON.parse(localStorage.getItem('user'));\r\n    const history = useHistory();\r\n    const id = user1._id;\r\n    const [user, setUser] = useState({});\r\n    const [loggedInState, setLoggedInState] = useState(false);\r\n    const [disabledbtnClass, setDisabledbtnClass] = useState('');\r\n    useEffect(() => {\r\n\r\n      (async () => {\r\n        const res = await axios.get(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users/profile`, {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      \r\n      });\r\n    setUser(res.data);\r\n \r\n      })();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <DashboardLayout activeKey={3}>\r\n            <div class=\"container content-header mb-4 mt-3\">\r\n                <div class=\"row mb-2\">\r\n                    <div class=\"col-sm-6\">\r\n                        <h1 class=\"ml-3 text-dark\">Profile Info</h1>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <ol class=\"breadcrumb float-sm-right mr-4\">\r\n                            <li class=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n                            <li class=\"breadcrumb-item active\">Profile Info</li>\r\n                        </ol>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"container-fluid\">\r\n\r\n                <section class=\"content\">\r\n                    <div class=\"row\" style={{ padding: \"0\", margin: \"0\" }}>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card p-4\">\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        firstName: user.firstName,\r\n                                        lastName: user.lastName,\r\n                                        email: user.email,\r\n                                        phone: user.phone,\r\n                                        company: user.company,\r\n                                        job: user.job\r\n                                    }}\r\n                                    validationSchema={validationSchemaFor1}\r\n                                    enableReinitialize={true}\r\n                                    onSubmit={async (values) => {\r\n                                        setLoggedInState(true);\r\n                                        setDisabledbtnClass('noCursor')\r\n                                        values._id = id;\r\n                                        try {\r\n                                            let res = await axios.put(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users`, values, {\r\n                                                headers: {\r\n                                                    authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n                                                }\r\n                                            });\r\n                                            alert(\"Profile Successfully Updated\")\r\n                                            history.push('/dashboard')\r\n                                        }\r\n                                        catch (error) {\r\n                                            console.log('response', error);\r\n                                            setLoggedInState(false);\r\n                                            setDisabledbtnClass('')\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {({ handleSubmit, handleChange, setFieldValue, values, errors }) => {\r\n                                        const handleCheckboxesChange = () => {\r\n                                        }\r\n                                        return (\r\n                                            <form onSubmit={handleSubmit}>\r\n                                                <div class=\"row\">\r\n\r\n                                                    <div class=\"col-lg-9\">\r\n                                                        <div class=\"form-group row\">\r\n                                                            <div class=\"col-sm-12\">\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-12\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"form-group row\">\r\n                                                            <div class=\"col-sm-12 col-md-6\">\r\n                                                                <label class=\"form-control-label\">First Name: </label>\r\n                                                                <input type=\"text\" name=\"firstName\" class=\"form-control\"\r\n                                                                       placeholder=\"First Name\" onChange={handleChange}\r\n                                                                       value={values.firstName}/>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-12 col-md-6\">\r\n                                                                <label class=\"form-control-label\">Last Name: </label>\r\n                                                                <input type=\"text\" name=\"lastName\" class=\"form-control\"\r\n                                                                       placeholder=\"Last Name *\" onChange={handleChange}\r\n                                                                       value={values.lastName}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"form-group row\">\r\n                                                            <div class=\"col-sm-12 col-md-6\">\r\n                                                                <label class=\"form-control-label\">Email: </label>\r\n                                                                <input type=\"text\" name=\"email\" class=\"form-control\"\r\n                                                                       placeholder=\"Your Email *\"\r\n                                                                       onChange={handleChange} value={values.email}/>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\">\r\n                                                                <label class=\"form-control-label\">Phone: </label>\r\n                                                                <div class=\"input-group mb-3\">\r\n                                                                    <input type=\"text\" name=\"phone\" class=\"form-control\"\r\n                                                                           placeholder=\"Your Phone *\"\r\n                                                                           onChange={handleChange}\r\n                                                                           value={values.phone}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"form-group row\">\r\n                                                            <div class=\"col-sm-12 col-md-6\">\r\n                                                                <label class=\"form-control-label\">Company: </label>\r\n                                                                <input type=\"text\" name=\"company\" class=\"form-control\"\r\n                                                                       placeholder=\"Company *\" onChange={handleChange}\r\n                                                                       value={values.company}/>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\">\r\n                                                                <label class=\"form-control-label\">Job Title: </label>\r\n                                                                <div class=\"input-group mb-3\">\r\n                                                                    <input name=\"job\" class=\"form-control\"\r\n                                                                        placeholder=\"Job Title *\"\r\n                                                                        onChange={handleChange} value={values.job} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div className=\"col-lg-12\">\r\n                                                                {/* <input type=\"submit\" name=\"submit\"\r\n                                                                    className=\"btn btn-primary\"\r\n                                                                    value=\"Update Profile\" /> */}\r\n                                                                <button type=\"submit\" className={`btn btn-primary ${disabledbtnClass}`} disabled={loggedInState}>\r\n                                                                    {loggedInState && (\r\n                                                                        <i\r\n                                                                            className=\"fa fa-refresh fa-spin\"\r\n                                                                            style={{ marginRight: \"5px\" }}\r\n                                                                        />\r\n                                                                    )}\r\n                                                                    {loggedInState && <span>Updating Profile</span>}\r\n                                                                    {!loggedInState && <span>Update Profile</span>}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n\r\n                                        )\r\n                                    }}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </DashboardLayout>\r\n    )\r\n}\r\nexport default Profile;\r\n","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\list.js",["144","145","146","147","148"],"import React, {useEffect, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport {Table, Tag, Space} from 'antd';\nimport {Link, useLocation, BrowserRouter as Router} from \"react-router-dom\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\nimport DashboardLayout from '../shared/layout/DashaboardLayout';\n\nconst Lists = () => {\n    let data1 = localStorage.getItem('user')\n    const [allData, setAllData] = useState([]);\n    const [deleted, setDeleted] = useState(0);\n\n    console.log(data1);\n\n    useEffect(() => {\n      (async () => {\n        const res = await axios.get(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users`, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      console.log(res.data.data);\n      setAllData(res.data.data);\n      })();\n    }, [deleted]);\n       \n    async function deleteFunction( {_id }) {\n    const res = await axios.delete(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users/${_id} `,{\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    setDeleted(deleted + 1);  \n  }\n  \n\n    const columns = [\n        {\n            title: 'First Name',\n            dataIndex: 'firstName',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email'\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone'\n        },\n\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Link class=\"btn btn-outline-success px-2 py-1\" style={{border: \"1px solid green\"}}\n                          to={`/updateform?id=${record._id}`}> <FontAwesomeIcon icon={faEdit} className=\"\"/></Link>\n                    <a class=\"btn btn-outline-danger px-2 py-1\" style={{border: \"1px solid red\"}}\n                       onClick={() => deleteFunction(record)}> <FontAwesomeIcon icon={faTrash} className=\"\"/></a>\n                </Space>\n            ),\n        }\n    ];\n    const data = [{}];\n    allData.map((user) => {\n        data.push({\n            key: user.id,\n            firstname: user.firstName,\n            email: user.email,\n            phone: user.phone,\n            action: user.review + '%',\n        })\n        return data;\n    });\n    return (\n        <DashboardLayout activeKey={2}>\n\n            <section class=\"content-header px-4 mt-3\">\n                <div class=\"container\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <h1 class=\"m-0 text-dark\">Users</h1>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <ol class=\"breadcrumb float-sm-right\">\n                                <li class=\"breadcrumb-item\"><Link to={`/dashboard`}>Dashboard</Link></li>\n                                <li class=\"breadcrumb-item active\">Users.</li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 mb-4 \">\n                            <div className=\"float-right\">\n                                <Link type=\"\" class=\"btn btn-outline-success\" to={`/adduser`}\n                                      style={{border: \"1px solid green\"}}><FontAwesomeIcon icon={faPlus}/> Add\n                                    User</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <div className=\"container\">\n                <div className=\"row px-4\">\n                    <div className=\"col-12\">\n                        <Table columns={columns} dataSource={allData}>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n\n        </DashboardLayout>\n    );\n}\n\nexport default Lists;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\addUser.js",["149","150","151","152","153","154"],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\projects.js",["155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DashboardLayout from \"../shared/layout/DashaboardLayout\";\r\nimport { parse, end, toSeconds, pattern } from \"iso8601-duration\";\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Projects = () => {\r\n  let data1 = localStorage.getItem(\"user\");\r\n  const [allData, setAllData] = useState([]);\r\n  const [deleted, setDeleted] = useState(0);\r\n  console.log(toSeconds(parse(\"PT4128H0M0S\")));\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await axios.get(`${process.env[\"REACT_APP_API_URL\"]}api/v1/projects`, {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n        },\r\n      });\r\n      console.log(\"Sample data set\", res.data.data);\r\n      res.data.data.map((element) => {\r\n        if (element.actualWork && element.actualWork != null && element.actualWork != 'NaN') {\r\n          element.actualWork = toSeconds(parse(element.actualWork))/3600/24;\r\n        }\r\n        if (element.remainingWork && element.remainingWork != null && element.remainingWork != 'NaN') {\r\n          element.remainingWork = toSeconds(parse(element.remainingWork))/3600/24;\r\n        }\r\n      });\r\n      setAllData(res.data.data);\r\n    })();\r\n  }, [deleted]);\r\n\r\n  async function deleteFunction({ key }) {\r\n    let _id = key;\r\n    console.log(_id)\r\n    const res = await axios.delete(\r\n      `${process.env[\"REACT_APP_API_URL\"]}api/v1/projects/${_id} `,\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n        },\r\n      }\r\n    );\r\n    setDeleted(deleted + 1);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      render:proj=><Link to={{\r\n        pathname: '/projectDetails',\r\n        state: proj\r\n      }}> {proj.name} </Link>\r\n    },\r\n    {\r\n      title: \"Start Date\",\r\n      dataIndex: \"startDate\",\r\n    },\r\n    {\r\n      title: \"Finish Date\",\r\n      dataIndex: \"finishDate\",\r\n    },\r\n    {\r\n      title: \"Remaining Work\",\r\n      dataIndex: \"remainingWork\",\r\n    },\r\n    {\r\n      title: \"Duration\",\r\n      dataIndex: \"duration\",\r\n    },\r\n    {\r\n      title: \"Work Done Percentage\",\r\n      dataIndex: \"workDonePercentage\",\r\n    },\r\n    {\r\n      title: \"Actual Cost\",\r\n      dataIndex: \"actualCost\",\r\n    },\r\n    {\r\n      title: \"Budgeted Cost\",\r\n      dataIndex: \"budgetedCost\",\r\n    },\r\n    {\r\n      title: \"Actual Work\",\r\n      dataIndex: \"actualWork\",\r\n    },\r\n    {\r\n      title: \"Cost For Remainder\",\r\n      dataIndex: \"costForRemainder\",\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n          <Space size=\"middle\">\r\n              <a class=\"btn btn-outline-danger px-2 py-1\" style={{border: \"1px solid red\"}}\r\n                 onClick={() => deleteFunction(record)}> <FontAwesomeIcon icon={faTrash} className=\"\"/></a>\r\n          </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  function numberWithCommas(x) {\r\n    if(x != null && x != undefined){\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }else{\r\n      return ''\r\n    }   \r\n  }\r\n\r\n  const data = [];\r\n  allData.map((project) => {\r\n    data.push({\r\n      key: project._id,\r\n      startDate: moment.utc(project.startDate).format('MMM Do YYYY'),\r\n      finishDate: moment.utc(project.finishDate).format('MMM Do YYYY'),\r\n      duration: Number(project.duration).toFixed(0),\r\n      workDonePercentage: Number(project.workDonePercentage).toFixed(2) + \"%\",\r\n      actualCost: project.actualCost? numberWithCommas(project.actualCost.toFixed(0)): '',\r\n      budgetedCost: project.budgetedCost? numberWithCommas(project.budgetedCost.toFixed(0)):'' ,\r\n      actualWork: project.actualWork? Number(project.actualWork).toFixed(0) + \" days\": '',\r\n      costForRemainder: project.costForRemainder? numberWithCommas(project.costForRemainder.toFixed(0)): '',\r\n      remainingWork: project.remainingWork? Number(project.remainingWork).toFixed(0) + \" days\": '',\r\n      name: project\r\n    });\r\n    return data;\r\n  });\r\n  console.log(\"my data\", allData);\r\n  return (\r\n    <DashboardLayout activeKey={5}>\r\n      <section class=\"content-header px-4 mt-3\">\r\n        <div class=\"container\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n              <h1 class=\"m-0 text-dark\">Projects</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <ol class=\"breadcrumb float-sm-right\">\r\n                <li class=\"breadcrumb-item\">\r\n                  <a href=\"/dashboard\">\r\n                    Dashboard\r\n                  </a>\r\n                </li>\r\n                <li class=\"breadcrumb-item active\">Projects</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-4 \">\r\n              <div className=\"float-right\">\r\n                <Link\r\n                  type=\"\"\r\n                  class=\"btn btn-outline-success\"\r\n                  to={`/addProject`}\r\n                  style={{ border: \"1px solid green\" }}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Project\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"\" style={{ margin:20}}>\r\n        <div className=\"row px-4\">\r\n          <div className=\"col-12\">\r\n            <Table columns={columns} dataSource={data}></Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Projects;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\pricing.js",["167"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport \"./style.scss\";\n\nconst PricingPlan = () => {\n    const [allPlan, setAllPlan] = useState([]);\n    useEffect(() => {\n        (async () => {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}api/v1/stripe/planList`, {\n                headers: {\n                    authorization: `Bearer ${localStorage.getItem('access_token')}`\n                }\n            });\n            setAllPlan(res.data.data);\n        })();\n    }, []);\n\n    const handleClick = async (id) => {\n        let user = JSON.parse(localStorage.getItem('user'));\n        const customerId = user.customer.id;\n        if (!user.paymentMethods || (user.paymentMethods && !user.paymentMethods.length)) {\n            alert(\"You can't subscribe to any package because you have not setup any payment method\");\n            return false;\n        }\n        const paymentId = user.paymentMethods[0].id\n        const PlanSelected = {\n            customer_id: customerId, plan_id: id, default_payment_method: paymentId\n        }\n        try {\n            const res = await axios.post(`${process.env[\"REACT_APP_API_URL\"]}api/v1/stripe/createSubscription`, PlanSelected)\n            console.log(res);\n            if (res.status == 200) {\n                alert(\"You have successfully subscribed.\")\n            }\n\n        } catch (error) {\n            console.log('response', error)\n            alert(\"An error occured, try on some later time\");\n        }\n    }\n    return (\n        <>\n            <section class=\"content-header mt-3 mb-3\">\n                <div class=\"container\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <h1 class=\"ml-2 text-dark\">Plans</h1>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <ol class=\"breadcrumb float-sm-right\">\n                                <li class=\"breadcrumb-item \"><Link to={`/dashboard`}>Dashboard</Link></li>\n                                <li class=\"breadcrumb-item active\">Plans</li>\n\n                            </ol>\n                        </div>\n                    </div>\n\n                </div>\n            </section>\n            <div className=\"container-fluid\">\n                <div className=\"row justify-content-center \">\n                    {\n                        allPlan.map((item, index) => (\n\n                                <div className=\"col-3   text-center planrecommended mr-1\" key={index}>\n                                    <div className=\"row mb-3\">\n                                    </div>\n                                    <h1 className=\"text-white\">{item.product.name}</h1>\n                                    <h3 className=\"text-white\">{item.amount} /month </h3>\n                                    <ul class=\"features\">\n                                        {(item.product.metadata.features.split(',')).map((feature) => <li\n                                            data-v-446d255c=\"\" class=\"feature\">{feature}</li>)}\n                                    </ul>\n                                    <button className=\"recbtn\" onClick={() => handleClick(item.id)}>Subscribe to {item.product.name}\n                                    </button>\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\nexport default PricingPlan;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\billing.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\projectDetails.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useEffect, useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DashboardLayout from \"../shared/layout/DashaboardLayout\";\r\nimport { parse, end, toSeconds, pattern } from \"iso8601-duration\";\r\nimport moment from 'moment';\r\nimport generateCalendar from \"antd/lib/calendar/generateCalendar\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  let data1 = localStorage.getItem(\"user\");\r\n  const [allData, setAllData] = useState([]);\r\n  const [deleted, setDeleted] = useState(0);\r\n  const [projectData, setProjectData] = useState(null);\r\n  const [data, setData] = useState({\"BCWS\" : null, \"BCWP\" : null, \"ACWP\" : null, \"BAC\" : null, \"EAC\" : null, \"CV\" : null, \"CV%\" : null, \"SV\" : null, \"SV%\" : null, \"CPI\" : null, \"SPI\" : null});\r\n\r\n  useEffect(() => {\r\n    console.log(\"Location\", props.location.state);\r\n    setProjectData(props.location.state);\r\n  }, []);\r\n\r\n  const updateValues = () => {\r\n\r\n  }\r\n  const getCVPct = () =>{\r\n    let cv = projectData.bcwp - projectData.acwp\r\n    if (projectData.bcwp > 0) {\r\n      return cv / projectData.bcwp;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const getSVPct = () =>{\r\n    let cv = projectData.bcwp - projectData.bcws\r\n    if (projectData.bcwp > 0) {\r\n      return cv / projectData.bcwp;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const getTCPI = () =>{\r\n    let remWork = projectData.budgetedCost - projectData.bcwp\r\n    let remFund = projectData.budgetedCost - projectData.acwp\r\n    if (remFund !== 0){\r\n      return remWork / remFund;\r\n    } else{\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  const getTSPI = () =>{\r\n    let remWork = projectData.budgetedCost - projectData.bcwp\r\n    let remFund = projectData.budgetedCost - projectData.bcws\r\n    if (remFund !== 0){\r\n      return remWork / remFund;\r\n    } else{\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  const getEAC = () => {\r\n    let ccpi = projectData.acwp>0? projectData.bcwp / projectData.acwp : 0\r\n    return ccpi>0? projectData.budgetedCost / ccpi: projectData.budgetedCost\r\n  }\r\n  function numberWithCommas(x) {\r\n    if(x != null && x != undefined){\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }else{\r\n      return ''\r\n    }   \r\n  }\r\n  \r\n  if (projectData) {\r\n  return (\r\n    <DashboardLayout activeKey={5}>\r\n      <section class=\"content-header px-4 mt-3\">\r\n        <div class=\"container\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n              <h1 class=\"m-0 text-dark\">{projectData ? projectData.name : null} Details</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <ol class=\"breadcrumb float-sm-right\">\r\n                <li class=\"breadcrumb-item\">\r\n                  <a href=\"/dashboard\">\r\n                    Dashboard\r\n                  </a>\r\n                </li>\r\n                <li class=\"breadcrumb-item active\">Product Details</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row px-4\">\r\n          <div className=\"col-12\">\r\n            <ol>\r\n              <li>{ numberWithCommas(projectData.budgetedCost.toFixed(0)) } is the Budgeted Cost of Work Scheduled for {projectData.name}</li>\r\n              <li>{ numberWithCommas(projectData.actualCost.toFixed(0)) } is the actual cost taken to complete the work as of {moment.utc(projectData.statusDate).format('MMMM Do YYYY')}</li>\r\n              <li>{ projectData.acwp? numberWithCommas(projectData.acwp.toFixed(0)): '0' } is the total cost of the work performed as of {moment.utc(projectData.statusDate).format('MMMM Do YYYY')}</li>\r\n              <li>{ (projectData.budgetedCost>0)?(100 * projectData.bcws / projectData.budgetedCost).toFixed(2): 0 } % of the work was planned to be completed by this time</li>\r\n              <li>{ projectData.budgetedCost? (100 * projectData.bcwp / projectData.budgetedCost).toFixed(2): \"\" }% of the work was completed by this time</li>\r\n              <li>{ (projectData.bcwp - projectData.acwp) == 0 ? 'You project is on budget'\r\n              : (projectData.bcwp - projectData.acwp) > 0\r\n              ? 'Your project is under budget by ' + numberWithCommas((projectData.bcwp - projectData.acwp).toFixed(0))\r\n              : 'Your project is over budget by ' + numberWithCommas((projectData.bcwp - projectData.acwp).toFixed(0))  } </li>\r\n              <li>{ getCVPct() == 0? 'Your project is on budget and the cost variance is 0 %'\r\n              : (getCVPct > 0)  \r\n              ? 'Your project is under budget by ' + (100* getCVPct()).toFixed(2) + '%'\r\n              : 'Your project is under budget by '  + (100* getCVPct()).toFixed(2) + '%'}</li>\r\n              <li>{ (projectData.bcwp - projectData.bcws) == 0? 'Your project is on schedule':\r\n              (projectData.bcwp - projectData.bcws) > 0\r\n              ? 'Your project is ahead of schedule ' + numberWithCommas((projectData.bcwp - projectData.bcws).toFixed(0))\r\n              : 'Your project is behind schedule, Corrective Action is Needed!!'  } </li>\r\n              <li>{ getSVPct() == 0 ? 'Your project schedule is on time with 0% schedule variance'\r\n              : getSVPct() > 0\r\n              ? 'Your project is ' + (100* getSVPct()).toFixed(2) +  '% ahead of schedule'\r\n              : 'Your project is ' + Math.abs((100* getSVPct()).toFixed(2)) +  '% behind of schedule'}</li>\r\n              <li>Based on the Reporting Period:\r\n                <ul>\r\n              <li>{(projectData.bcwp / projectData.acwp) > 1\r\n              ? 'Your Resource Utilization is good' \r\n              : 'Your Resource Utilization is not good'}</li>\r\n              <li>{getTCPI() > 1\r\n              ? 'Utilization of the project team for the remainder of the project can be stringent'\r\n              :'Utilization of the project team for the remainder of the project can be lenient'}</li>\r\n              <li>{(projectData.bcwp / projectData.bcws) > 1\r\n              ? 'Your project team is very efficient in utilizing the time allocated to the project' \r\n              : 'Your project team is less efficient in utilizing the time allocated to the project'}</li>\r\n              <li>{getTSPI() > 1\r\n              ? 'Project team can be lenient in utilizing the remaining time allocated to the project'\r\n              :'Project team needs to work harder in utilizing the remaining time allocated to the project'}</li>\r\n              </ul></li>\r\n              <li>Per Current Trends:\r\n                <ul>\r\n                  <li>\r\n                  Your budget at completion will be {numberWithCommas(projectData.budgetedCost.toFixed(2))}\r\n                  </li>\r\n                  <li>Your estimated cost required to complete the remainder of the project is { numberWithCommas((projectData.budgetedCost - projectData.bcwp).toFixed(2)) }</li>\r\n                  <li>Your estimated cost at the end of the project is {numberWithCommas(getEAC().toFixed(0))}</li>\r\n                  <li>Variance on the total budget at the end of the project is { numberWithCommas((projectData.budgetedCost - getEAC()).toFixed(0)) } </li>\r\n                  <li>The estimated date your project is going to be complete is {moment.utc(projectData.finishDate).format('MMM Do YYYY')}</li>\r\n                </ul>\r\n              </li>\r\n            </ol>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n  }\r\n  else {\r\n    return(<div>Hassan</div>)\r\n  }\r\n};\r\n\r\nexport default ProjectDetails;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\signin\\signin.js",["194","195","196"],"import React, { useState } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport validationSchema from \"./validationSchema\";\r\nimport \"./style.scss\";\r\nimport { Formik } from \"formik\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signin = () => {\r\n    const [loggedInState, setLoggedInState] = useState(false);\r\n    const [disabledbtnClass, setDisabledbtnClass] = useState('');\r\n    const history = useHistory();\r\n    const handleFileClick = () => {\r\n        history.push('/forgetpass');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center login_wrapper\">\r\n                    <div className=\"auth-nav\">\r\n                        <a href=\"/\">\r\n                            <h3 style={{ fontSize: \"14px\" }}><b>OreeSight</b></h3>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"auth-outer\" >\r\n                        <div className=\"mobile-auth-toggle\">\r\n                            <h3 className=\"title\">Have an account?</h3>\r\n                            <button type=\"button\" className=\"button action-btn is-rounded\">Register</button>\r\n                        </div>\r\n                        <div className=\"auth-box shadow\">\r\n                            <div className=\"form-wrapper\">\r\n                                <div className=\"login\">\r\n                                    <div className=\"header\">\r\n                                        <h2 className=\"title is-4\">Login</h2>\r\n                                    </div>\r\n                                    <div className=\"body\">\r\n                                        <Formik\r\n                                            initialValues={{}}\r\n                                            validateOnChange={false}\r\n                                            validationSchema={validationSchema}\r\n                                            onSubmit={async (values) => {\r\n                                                setLoggedInState(true);\r\n                                                setDisabledbtnClass('noCursor')\r\n                                                try {\r\n                                                    let res = await axios.post(`${process.env.REACT_APP_API_URL}api/v1/authenticate`, values);\r\n                                                    let data = JSON.stringify(res.data)\r\n                                                    localStorage.setItem('user', data);\r\n                                                    localStorage.setItem('access_token', res.data.access_token);\r\n                                                    history.push('/dashboard')\r\n                                                } catch (error) {\r\n                                                    console.log('response', error)\r\n                                                    alert('User name or password is incorrect')\r\n                                                    setLoggedInState(false)\r\n                                                    setDisabledbtnClass('')\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            {({ handleSubmit, handleChange, values, errors }) => (\r\n                                                <form onSubmit={handleSubmit}>\r\n                                                    <input type=\"hidden\" name=\"_token\"\r\n                                                        value=\"hXcEpdURQMsUtWpyi9p0kma0zDZ0QJJeN170G4Ep\" />\r\n                                                    <div className=\"field\">\r\n                                                        <div className=\"control\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"field\">\r\n                                                        <div className=\"control\">\r\n                                                            <input type=\"text\" className=\"input\" placeholder=\"Email\"\r\n                                                                name=\"email\" onChange={handleChange}\r\n                                                                value={values.email} />\r\n                                                            <div className=\"form-icon\">\r\n                                                                <i className=\"sl sl-icon-envelope-open\"></i>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <span\r\n                                                            className={`error_notifier text-danger`}>{errors.email}</span>\r\n                                                    </div>\r\n                                                    <div className=\"field\">\r\n                                                        <div className=\"control\">\r\n                                                            <input type=\"password\" className=\"input\"\r\n                                                                placeholder=\"Password\" name=\"password\"\r\n                                                                onChange={handleChange} value={values.password} />\r\n                                                            <div className=\"form-icon\">\r\n                                                                <i className=\"sl sl-icon-lock\"></i>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <span\r\n                                                            className={`error_notifier text-danger`}>{errors.password}</span>\r\n                                                    </div>\r\n                                                    <button type=\"submit\" className={`button primary-btn raised is-rounded is-bold ${disabledbtnClass}`} disabled={loggedInState}>\r\n                                                        {loggedInState && (\r\n                                                            <i\r\n                                                                className=\"fa fa-refresh fa-spin\"\r\n                                                                style={{ marginRight: \"5px\" }}\r\n                                                            />\r\n                                                        )}\r\n                                                        {loggedInState && <span>Loggin In</span>}\r\n                                                        {!loggedInState && <span>Login</span>}\r\n                                                    </button>\r\n                                                    <a href=\"#\" className=\"forgot-password\"\r\n                                                        onClick={() => handleFileClick()}>\r\n                                                        Forgot Password?\r\n                                                   </a>\r\n                                                </form>\r\n                                            )\r\n                                            }\r\n                                        </Formik>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"side-box\">\r\n                                <h3 className=\"title is-light\" style={{ fontSize: \"22px\" }}>Have an account?</h3>\r\n                                <a href=\"/register\" className=\"button action-btn is-rounded\"\r\n                                    style={{ minWidth: \"160px\", height: \"35px\" }}>Register</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Signin;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\register\\register.js",["197","198","199","200","201","202"],"import React, {useState} from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\nimport \"./style.scss\";\r\nimport validationSchema from \"./validationSchema\";\r\nimport axios from 'axios';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n    const [loggedInState, setLoggedInState] = useState(false);\r\n    const [disabledbtnClass, setDisabledbtnClass] = useState('');\r\n    const history = useHistory();\r\n    return (\r\n        <>        \r\n            <div class=\"register-box\" style={{width: \"900px\", margin: \"2% auto\"}}>\r\n                <div class=\"register-logo\">\r\n                    <a href=\"https://psschedule.interactivesolutions.tech\" style={{textDecoration: \"none\"}}><b>Field\r\n                        Scheduling</b></a>\r\n                </div>\r\n                <div class=\"card\">\r\n                    <div class=\"card-body register-card-body\">\r\n                        <p class=\"login-box-msg\">Register a new membership</p>\r\n\r\n                        <Formik\r\n                            initialValues={{}}\r\n                            validateOnChange={false}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={async (values) => {\r\n                                setLoggedInState(true);\r\n                                setDisabledbtnClass('noCursor')\r\n                                try{\r\n                                    let res = await axios.post(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users/register`, values);\r\n                                    alert(\"You are successfully registered\")\r\n                                    history.push('/')\r\n                                    console.log(\"res\",res)\r\n                                }\r\n                                catch(error){\r\n                                    console.log('response',error);\r\n                                    setLoggedInState(false);\r\n                                    setDisabledbtnClass('');\r\n                                }\r\n                            }}\r\n                  \r\n                        >\r\n                        {({handleSubmit, handleChange, setFieldValue, values, errors}) => {\r\n                        const handleCheckboxesChange = () => {\r\n                                }\r\n                                return (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <input type=\"hidden\" name=\"_token\"\r\n                                               value=\"nozRv8x6ZTChQFuIocaP7sv0Q33Lf8pgrrca5KH7\"/>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-6\">\r\n                                                <div class=\"input-group \">\r\n                                                    <input type=\"text\" name=\"firstName\" class=\"form-control\"\r\n                                                           placeholder=\"First Name\" onChange={handleChange}\r\n                                                           value={values.firstName}/>\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-user\"></span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.firstName}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 \">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"text\" name=\"lastName\" class=\"form-control\"\r\n                                                           placeholder=\"Last Name *\" onChange={handleChange}\r\n                                                           value={values.lastName}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-user\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.lastName}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group \">\r\n                                                    <input type=\"email\" name=\"email\" class=\"form-control\"\r\n                                                           placeholder=\"Your Email *\" onChange={handleChange}\r\n                                                           value={values.email}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-envelope\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.email}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"text\" name=\"phone\" class=\"form-control\"\r\n                                                           placeholder=\"Your Phone *\" onChange={handleChange}\r\n                                                           value={values.phone}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-phone\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.phone}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"text\" name=\"company\" class=\"form-control\"\r\n                                                           placeholder=\"Company *\" onChange={handleChange}\r\n                                                           value={values.company}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-building\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.company}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"text\" name=\"job\" class=\"form-control\"\r\n                                                           placeholder=\"Job Title *\" onChange={handleChange}\r\n                                                           value={values.job}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-award\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.job}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"password\" name=\"password\" class=\"form-control\"\r\n                                                           placeholder=\"Password *\" onChange={handleChange}\r\n                                                           value={values.password}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-lock\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span className={`error_notifier text-danger`}>{errors.password}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"password\" class=\"form-control\"\r\n                                                           placeholder=\"Confirm Password *\" value=\"\"\r\n                                                           name=\"password_confirmation\" onChange={handleChange}\r\n                                                           value={values.password_confirmation}/>\r\n\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <div class=\"input-group-text\">\r\n                                                            <span class=\"fas fa-lock\"></span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span\r\n                                                    className={`error_notifier text-danger`}>{errors.password_confirmation}</span>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group \">\r\n                                                    <select class=\"form-control\" name=\"number_of_employees\">\r\n                                                        <option value=\"\" disabled=\"\" selected=\"\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.0\">\r\n                                                            Number of Employees\r\n                                                        </option>\r\n                                                        <option value=\"1-5\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$1-5\">\r\n                                                            1-5\r\n                                                        </option>\r\n                                                        <option value=\"5-25\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$5-25\">\r\n                                                            5-25\r\n                                                        </option>\r\n                                                        <option value=\"25-50\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$25-50\">\r\n                                                            25-50\r\n                                                        </option>\r\n                                                        <option value=\"50-100\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$50-100\">\r\n                                                            50-100\r\n                                                        </option>\r\n                                                        <option value=\"100-500\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$100-500\">\r\n                                                            100-500\r\n                                                        </option>\r\n                                                        <option value=\"500-1000\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$500-1000\">\r\n                                                            500-1000\r\n                                                        </option>\r\n                                                        <option value=\"1000+\"\r\n                                                                data-reactid=\".hbspt-forms-0.1:$3.1:$numemployees.$numemployees.0.1:$1000+\">\r\n                                                            1000+\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-6 mt-3\">\r\n                                                <div class=\"input-group\">\r\n                                                    <div class=\"maxl\" onChange={handleChange}>\r\n                                                        <label class=\"radio inline\">\r\n                                                            <input type=\"radio\" name=\"gender\" value=\"Male\" value={true}\r\n                                                                   checked={values.gender === \"true\"}\r\n                                                                   onChange={() => setFieldValue(\"gender\", true)}/>\r\n                                                            <span> Male </span>\r\n                                                        </label>\r\n\r\n                                                        <label class=\"radio inline\" style={{marginLeft: \"10px\"}}>\r\n                                                            <input type=\"radio\" name=\"gender\" value={false}\r\n                                                                   checked={values.gender === \"false\"}\r\n                                                                   onChange={() => setFieldValue(\"gender\", false)}/>\r\n                                                            <span style={{marginLeft: \"5px\"}}>Female </span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-12 mt-4 mb-3\"> \r\n                                                {/* <button type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                                                    {loggedInState===\"logging in\" ?   <span>Register<Loader className=\"loaderReg\" \r\n                                                    \r\n                                                    type=\"Rings\" \r\n                                                    color=\"#00BFFF\" \r\n                                                    height={35} \r\n                                                    width={35}/>\r\n                                               \r\n                                                    </span> : \"Register\" }\r\n                                                </button> */}\r\n                                                <button type=\"submit\" className={`btn btn-primary btn-block ${disabledbtnClass}`} disabled={loggedInState}>\r\n                                                    {loggedInState && (\r\n                                                        <i\r\n                                                            className=\"fa fa-refresh fa-spin\"\r\n                                                            style={{ marginRight: \"5px\" }}\r\n                                                        />\r\n                                                    )}\r\n                                                    {loggedInState && <span>Registring</span>}\r\n                                                    {!loggedInState && <span>Register</span>}\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                        <div className=\"text-center mb-2\">\r\n                        {loggedInState===\"logging in\" ? \"\": \r\n                            <a href=\"/\" class=\"text-center\">I already have a membership</a>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Register;\r\n","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\forgetpass\\ForgetPass.js",["203","204","205","206","207"],"import React, { useState } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport validationSchema from \"./validationSchema\";\r\nimport { Formik } from \"formik\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ForgetPass = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <div className=\"container d-flex  vh-100 \">\r\n        <div className=\"row  w-100 justify-content-center align-self-center   \">\r\n          <div className=\" col-md-5 card shadow \">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-center mt-2 mb-2\">\r\n                <span className=\"log\">Forget Password</span>\r\n              </div>\r\n            </div>\r\n            <Formik\r\n              initialValues={{}}\r\n              validationSchema={validationSchema}\r\n              onSubmit={async (values) => {\r\n                try {\r\n                  let res = await axios.post(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users/forgotPassword`, values);\r\n                  if (res.status == 200) {\r\n                    alert(\"A password reset code is sent on your email address\");\r\n                    localStorage.setItem(\"ms_project_user_email\", values.email);\r\n                    history.push('/changepassword')\r\n                  } else if (res.status == 202) {\r\n                    alert(\"This email is not registered\");\r\n                  } else {\r\n                    alert(\"An error occurred on the server, try again later\");\r\n                  }\r\n                }\r\n                catch (error) {\r\n                  console.log('response', error)\r\n                }\r\n              }}\r\n            >\r\n              {({ handleSubmit, handleChange, values, errors }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div class=\"form-group\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Email\" name=\"email\" onChange={handleChange} value={values.email} />\r\n                        <span className={`error_notifier text-danger`}>{errors.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mb-3 \">\r\n                    <div className=\"col-12 text-center\">\r\n                      <div>\r\n                        <button type=\"submit\" class=\"btn btn-warning text-white\">Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )\r\n              }\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ForgetPass;","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\changepass\\ChangePass.js",["208","209","210","211","212","213","214"],"import React, {useState, useEffect} from 'react'\nimport ReactDOM from \"react-dom\";\nimport validationSchema from \"./validationSchema\";\nimport {Formik} from \"formik\";\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\n\nimport \"./style.scss\";\n\n\nconst ChangePass = () => {\n\n    // const [recovery,setRecovery]=useState({});\n    // useEffect(() => {\n\n    //    (async () => {\n    //      const res = await axios.get(`${process.env[\"REACT_APP_API_URL\"]}api/v1/users/reset?resetPasswordToken=5a5362b0edc64d165cce494410bfdcec3a93ffe5`, {\n     \n    //    });\n    //    console.log(\"res\" ,res)\n    // //  setRecovery(res);\n\n    //    })();\n\n    //  }, []);\n\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <div className=\"container d-flex  vh-100 \">\n                <div className=\"row  w-100 justify-content-center align-self-center   \">\n                    <div className=\" col-md-5 card shadow \">\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center mt-2 mb-2\">\n                                <span className=\"log\">Change Password</span>\n                            </div>\n                        </div>\n\n<Formik\n                    initialValues={{}}\n                    validationSchema={validationSchema}\n                    onSubmit={async (values) => {\n                       try{\n                           const tokenResponse = await axios.get(`${process.env.REACT_APP_API_URL}api/v1/users/reset?resetPasswordToken=${values.token}`);\n                            if (tokenResponse.status == 202) {\n                                alert(\"Password reset token is invalid or has expired\");\n                            } else if (tokenResponse.status == 200) {\n                                let res = await axios.post(`${process.env.REACT_APP_API_URL}api/v1/users/resetPassword`, values);\n                                if (res.status == 200) {\n                                    history.push('/dashboard')\n                                } else {\n                                    alert(\"An error occurred\");\n                                }\n                            } else {\n                                alert(\"An error occurred\");\n                            }\n                       }\n                       catch(error){\n                        console.log('response',error)\n                           alert(\"An error occurred\");\n                       }\n                    }}\n                  \n                >\n                    {({handleSubmit, handleChange, values, errors}) => (\n\n\n                                <form onSubmit={handleSubmit}>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group\">\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter code\"\n                                                       name=\"token\"\n                                                       onChange={handleChange} value={values.token}/>\n                                                <span className={`error_notifier text-danger`}>{errors.token}</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <div class=\"form-group\">\n\n                                                <input disabled={true} type=\"text\" class=\"form-control\" placeholder=\"Email\" name=\"email\"\n                                                       onChange={handleChange} value={values.email}/>\n                                                <span className={`error_notifier text-danger`}>{errors.email}</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-12\">\n                                            <div class=\"f\">\n\n                                                <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"\n                                                       placeholder=\"New Password\" name=\"password\"\n                                                       onChange={handleChange} value={values.password}/>\n                                                <span className={`error_notifier text-danger`}>{errors.password}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"row mb-3 mt-2\">\n    <div className=\"col-12\">\n<div class=\"float-right\">\n<small id=\"emailHelp\" class=\"form-text text-muted\">Forget Password?</small>\n  \n  </div>\n    </div>\n    </div> */}\n                                    <div className=\"row mb-3 mt-3 \">\n                                        <div className=\"col-12 text-center\">\n                                            <div>\n                                                <button type=\"submit\"\n                                                        class=\"btn btn-danger btn-block  text-white\">Save\n                                                </button>\n\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"col-6 pl-1\">\n    <div >\n  <button type=\"button\" class=\"btn btn-block btn-primary\">Primary</button>\n  </div>\n</div> */}\n                                    </div>\n\n\n                                </form>\n                            )\n                            }\n                        </Formik>\n                    </div>\n\n\n                </div>\n\n            </div>\n\n\n        </>\n\n    )\n}\nexport default ChangePass;\n","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\AddProject.js",["215","216","217","218","219","220","221","222","223","224"],"import React, {useState} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport \"./style.scss\";\r\nimport validationSchemaFor from \"./validationSchemaFor\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport DashboardLayout from \"../shared/layout/DashaboardLayout\";\r\nimport {Button, Box, makeStyles} from \"@material-ui/core\";\r\nimport AttachFileIcon from \"./AttatchFileIcon\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport \"./AddProject.scss\";\r\nimport { message, } from \"antd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n\r\n    formSpacing: {\r\n        padding: \"20px\",\r\n    },\r\n    cardBtn: {\r\n        textTransform: \"capitalize\",\r\n        background: \"transparent\",\r\n        boxShadow: \"none\",\r\n        marginBottom: \"17px\",\r\n        marginTop: \"17px\",\r\n        fontSize: \"11px\",\r\n        padding: \"8px\",\r\n        borderRadius: \"6px\",\r\n    },\r\n}));\r\n\r\nconst iconStyling = {\r\n    marginRight: \"8px\",\r\n};\r\nconst AddProject = (props) => {\r\n    const [file, setFile] = useState(null);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const handleUpload = async (data) => {\r\n        try {\r\n            if (file) {\r\n                let formData = new FormData();\r\n                formData.append(\"file\", file, \"file\");\r\n\r\n                let res = await axios.post(`${process.env[\"REACT_APP_API_URL\"]}api/v1/projects`, formData,\r\n                    {\r\n                        headers: {\r\n                            authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n                        }\r\n                    });\r\n                if (res.status == 200) {\r\n                    history.push('/projects')\r\n                }else if(res.status == 422){\r\n                    message.error('Sorry! Invalid File Type');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(\"response\", error);\r\n            if(error.message == \"Request failed with status code 422\"){\r\n                message.error('Sorry! Invalid File Type');\r\n            }\r\n        }\r\n    };\r\n    const {register, handleSubmit, errors} = useForm();\r\n    return (\r\n        <>\r\n            <DashboardLayout activeKey={5}>\r\n                <form onSubmit={handleSubmit(handleUpload)} className={classes.formSpacing}>\r\n                    <Box style={{marginLeft: \"20px\", cursor: \"pointer\"}}>\r\n                        <label className=\"myBox\">\r\n                            {/* <AttachFileIcon style={iconStyling} className=\"myIcon\"/> */}\r\n                            <span className=\"IconsWorks\">\r\n          <i class=\"fa fa-paperclip fa-5x\" aria-hidden=\"true\"></i>\r\n          </span>\r\n\r\n                            Upload\r\n                            <input\r\n                                type=\"file\"\r\n                                style={{display: \"none\"}}\r\n                                accept=\".mpp\"\r\n                                onChange={(e) => {\r\n                                    setFile(e.target.files[0]);\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n\r\n                                className={classes.cardBtn}\r\n                                className=\"alignButton\"\r\n                                style={{background: \"#000827\"}}\r\n                                onClick={handleSubmit(handleUpload)}\r\n                            >\r\n                                Send\r\n                            </Button>\r\n\r\n                            <label style={{marginLeft: \"10px\", color: \"#201E1E\"}}>\r\n                                {file?.name}\r\n                            </label>\r\n                        </label>\r\n                    </Box>\r\n                    <Box justifyContent=\"flex-start\" style={{\r\n                        marginBottom: \"8px\",\r\n\r\n                    }}>\r\n                    </Box>\r\n                </form>\r\n            </DashboardLayout>\r\n        </>\r\n    );\r\n};\r\nexport default AddProject;\r\n","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\index.js",["225","226","227"],"import React, {useEffect, useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport DashboardLayout from '../shared/layout/DashaboardLayout';\r\nimport Chart from './Chart';\r\nimport axios from \"axios\";\r\nimport { date } from 'yup';\r\nimport moment from 'moment';\r\nconst Dashboard = () => {\r\n    const [allData, setAllData] = useState({});\r\n    const [dates, setAllDates] = useState([]);\r\n    const [actualCosts, setActualCost] = useState([]);\r\n    const [mapsVisibility, setMapsVisibility] = useState(false);\r\n    useEffect(() => {\r\n        (async () => {\r\n          const res = await axios.get(`${process.env[\"REACT_APP_API_URL\"]}api/v1/projects/dashboard`, {\r\n            headers: {\r\n              authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n            },\r\n          });\r\n          if(res.data.data.totalCostForRemainder > 0 || res.data.data.totalActualcost > 0 || res.data.data.totalAmount > 0){\r\n            setAllData(res.data.data);\r\n            setMapsVisibility(true);\r\n          }else{\r\n            setAllData(res.data.data);\r\n          }\r\n          let tempdates = [];\r\n          let tempactualCost = [];\r\n          res.data.data.dates.map((data)=>{\r\n            tempdates.push(data.startDate);\r\n            tempactualCost.push(data.actualCost);\r\n          })\r\n          var filteredDates = tempdates.filter(function(x) {\r\n            return x !== undefined;\r\n         });\r\n         var filteredActualCost = tempactualCost.filter(function(x) {\r\n            return x !== undefined;\r\n         });\r\n          let formatedDates = [];\r\n          filteredDates.map((data)=>{\r\n           formatedDates.push(moment(data).format('YYYY-MM-DD'))\r\n          })\r\n          setAllDates(formatedDates);\r\n          setActualCost(filteredActualCost);\r\n        })();\r\n      }, []);\r\n     \r\n    return (\r\n        \r\n        <DashboardLayout activeKey={1}>\r\n            <section class=\"content-header mt-3 px-5\">\r\n                <div class=\"container\">\r\n                    <div class=\"row mb-2\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h1 class=\"m-0 text-dark\">Dashboard</h1>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <ol class=\"breadcrumb float-sm-right\">\r\n                                <li class=\"breadcrumb-item active\">Dashboard</li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </section>\r\n                <section>\r\n                    <div className=\"container\">\r\n                        <div className=\"row  \">\r\n                            <div className=\"col-sm block-info mr-1\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-2 graph-icon\"><i class=\"fa fa-chart-bar\"></i></div>\r\n                              <div className=\"values col-sm\"> <span class=\"font900 mb-0\"><div className=\"color\">${allData.totalActualcost?allData.totalActualcost.toFixed(0):'0'}</div></span>\r\n                                <p className=\"explain-1\">Total Cost For Remainder</p></div>\r\n                            </div>\r\n                                </div>\r\n                                <div className=\"col-sm block-info mr-1\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col-sm-2 graph-icon\"><i class=\"fa fa-chart-bar\"></i></div>\r\n                              <div className=\"values col-sm\"><div className=\"color\">${allData.totalAmount? allData.totalAmount.toFixed(0): '0'}</div>\r\n                                <p className=\"explain\">Total Amount</p></div>\r\n                            </div>\r\n                                </div>\r\n                                <div className=\"col-sm block-info mr-1\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col-sm-2 graph-icon\"><i class=\"fa fa-chart-bar\"></i></div>\r\n                              <div className=\"values col-sm\"><div className=\"color\">${allData.totalCostForRemainder?allData.totalCostForRemainder.toFixed(0): '0'}</div>\r\n                                <p className=\"explain\">Total Actual Cost </p></div>\r\n                            </div>                               \r\n                                </div>\r\n                                \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            {mapsVisibility ? \r\n              <Chart doughnutValues ={allData} startDates={dates} actualCosts={actualCosts}/> :\r\n              <span className=\"chartsMsg\">Sorry No Data Available</span>\r\n            }\r\n            \r\n            </DashboardLayout>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\validationSchemaFor.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\MyStoreCheckout.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\register\\validationSchema.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\signin\\validationSchema.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\changepass\\validationSchema.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\forgetpass\\validationSchema.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\AttatchFileIcon.jsx",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\Chart.js",["228","229","230","231"],"import react from 'react'\r\nimport {Bar, Doughnut, Line, } from 'react-chartjs-2'\r\n\r\n\r\nfunction Chart(props){\r\nconst { doughnutValues,startDates,actualCosts} = props;\r\nconsole.log(props)\r\n    const bar ={\r\n        labels:['Total Cost for Remainder', 'Total Amount','Total Actual Cost', '',''],\r\n        datasets :[\r\n          {\r\n            label: 'Project Cost Analysis',\r\n            data :[doughnutValues.totalCostForRemainder, doughnutValues.totalAmount, doughnutValues.totalActualcost],\r\n            backgroundColor: ['#b7b7b7', '#3490dc','#53c3b8'  ],\r\n          },\r\n          \r\n        ]\r\n      }\r\n      const options = {\r\n          title:{\r\n              display:true,\r\n              text:'bar chart',\r\n              gridlines:'none',\r\n              \r\n          },\r\n          scales :{\r\n            gridlines:{\r\n                display:false\r\n            }\r\n          },\r\n      }\r\n      \r\n      \r\n      const doughnut ={\r\n        labels:['Total Cost for Remainder', 'Total Amount','Total Actual Cost',],\r\n        datasets :[\r\n          {\r\n            label: 'sales',\r\n            data :[doughnutValues.totalCostForRemainder, doughnutValues.totalAmount, doughnutValues.totalActualcost],\r\n            backgroundColor: ['#b7b7b7', '#3490dc','#53c3b8' ],\r\n          },\r\n          \r\n        ]\r\n      }\r\n      \r\n\r\n      const line ={\r\n        labels:startDates,\r\n        datasets :[\r\n          {\r\n            label: 'sales',\r\n            data :actualCosts,\r\n            backgroundColor: [ ],\r\n            gridlines:{\r\n                display:false,\r\n            },\r\n          },\r\n          \r\n        ]\r\n      }\r\n      \r\n\r\n      \r\n\r\n     return(\r\n\r\n        <div className=\"chart row mt-2 fullchart\">\r\n\r\n            <div className=\"col-md-12 firstchart\">\r\n                <div className=\"row\">\r\n                    <div class=\"col-6\">\r\n                <Doughnut data = {doughnut} options/></div>\r\n                <div className=\"col-6\">\r\n                  <Bar data = {bar} options/></div>\r\n                  </div>\r\n                  </div>\r\n             {/* <div className='col-md-6 saas'>\r\n                <Line data = {line} options/></div>     */}\r\n            </div>\r\n     )\r\n\r\n\r\n\r\n}\r\nexport default Chart","C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\CheckoutForm.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\shared\\layout\\DashaboardLayout\\index.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\CardSection.js",[],"C:\\Users\\hassa\\Constology\\OreeSight\\frontend\\src\\dashboard\\SideNav.js",["232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React from \"react\";\nimport { Menu } from \"antd\";\n\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  TeamOutlined,\n  DesktopOutlined,\n  NotificationOutlined,\n} from \"@ant-design/icons\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTachometerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { faIdCardAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTasks } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBusinessTime } from \"@fortawesome/free-solid-svg-icons\";\nimport { faRoad } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SideNav = ({ activeKey }) => {\n  const [role, setRole] = useState(\"\");\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  let userName = \"\";\n  console.log('Active Key',activeKey);\n  if (user && user.user) {\n    userName = user.user.firstName + \" \" + user.user.lastName;\n  }\n\n  useEffect(()=>{\n    setRole(user.user.role);\n    console.log(role);\n  },[])\n  const history = useHistory();\n  \n  const handleUserClick = () => {\n    history.push(\"/list\");\n  };\n  const handleVideosClick = () => {\n    history.push(\"/profile\");\n  };\n  const handleFileClick = () => {\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n  const handlePaymentClick = () => {\n    history.push(\"/billing\");\n  };\n  const handleUserDashboard = () => {\n    history.push(\"/dashboard\");\n  };\n  const handleProjectClick = () => {\n    history.push(\"/projects\");\n  };\n  const handleUsersClick = () => {\n    history.push(\"/list\");\n  };\n\n  return (\n    <div>\n      <div className=\"level1\">\n        <img\n          src=\"https://psschedule.interactivesolutions.tech/img/logo.jpg\"\n          alt=\"Logo\"\n          class=\"brand-image img-circle elevation-3\"\n          style={{ opacity: \"0.8\" }}\n        />{\" \"}\n        <span className=\"ml-2 mt-1 brand-text font-weight-light brand-link brand-text font-weight-light\">\n          OreeSight\n        </span>\n      </div>\n      <div>\n        <hr className=\"new1\" />\n      </div>\n      <div className=\"level1\">\n        <img src=\"/images/ms.jpg\" className=\"level1img\" />{\" \"}\n        <span className=\"ml-3 info\" style={{ fontSize: \"16px\" }}>\n          {userName}\n        </span>\n      </div>\n      <div className=\"px-2\">\n        <hr className=\"new2 \" />\n      </div>\n      <Menu\n        theme=\"light\"\n        mode=\"inline\"\n        defaultSelectedKeys={[activeKey.toString()]}\n      >\n        <Menu.Item key=\"1\" onClick={handleUserDashboard}>\n          <FontAwesomeIcon icon={faTachometerAlt} className=\"nav-item\" />\n          <span className=\"head1\"> Dashboard</span>\n        </Menu.Item>\n        \n\n        <Menu.Item key=\"3\" onClick={handleVideosClick}>\n          <FontAwesomeIcon icon={faIdCardAlt} className=\"nav-item3\" />\n          <span className=\"head1\"> Profile</span>\n        </Menu.Item>\n        <Menu.Item key=\"4\" onClick={() => handlePaymentClick()}>\n          <FontAwesomeIcon icon={faShoppingCart} className=\"nav-item4\" />\n          <span className=\"head1\"> Payment Plan</span>\n        </Menu.Item>\n        <Menu.Item key=\"5\" onClick={() => handleProjectClick()}>\n          <FontAwesomeIcon icon={faTasks} className=\"nav-item5\" />\n\n          <span className=\"head1\"> Projects</span>\n        </Menu.Item>\n\n        {role === \"admin\" && (\n          <Menu.Item key=\"2\" onClick={handleUserClick}>\n            <FontAwesomeIcon icon={faUsers} className=\"nav-item2\" />\n            <span className=\"head1\"> Users</span>\n          </Menu.Item>\n        )}\n\n        <Menu.Item key=\"6\" onClick={() => handleFileClick()}>\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"nav-item6\" />\n          <span className=\"head1\"> Logout</span>\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nexport default SideNav;\n",{"ruleId":"245","severity":1,"message":"246","line":10,"column":49,"nodeType":"247","messageId":"248","endLine":10,"endColumn":53},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":24,"column":8,"nodeType":"255","endLine":24,"endColumn":10,"suggestions":"256"},{"ruleId":"245","severity":1,"message":"257","line":62,"column":29,"nodeType":"247","messageId":"248","endLine":62,"endColumn":32},{"ruleId":"245","severity":1,"message":"258","line":79,"column":27,"nodeType":"247","messageId":"248","endLine":79,"endColumn":49},{"ruleId":"259","severity":1,"message":"260","line":210,"column":123,"nodeType":"261","messageId":"262","endLine":210,"endColumn":125},{"ruleId":"259","severity":1,"message":"260","line":219,"column":123,"nodeType":"261","messageId":"262","endLine":219,"endColumn":125},{"ruleId":"263","severity":1,"message":"264","line":260,"column":72,"nodeType":"265","endLine":260,"endColumn":108},{"ruleId":"245","severity":1,"message":"257","line":73,"column":49,"nodeType":"247","messageId":"248","endLine":73,"endColumn":52},{"ruleId":"245","severity":1,"message":"258","line":89,"column":47,"nodeType":"247","messageId":"248","endLine":89,"endColumn":69},{"ruleId":"245","severity":1,"message":"266","line":4,"column":16,"nodeType":"247","messageId":"248","endLine":4,"endColumn":19},{"ruleId":"245","severity":1,"message":"267","line":5,"column":15,"nodeType":"247","messageId":"248","endLine":5,"endColumn":26},{"ruleId":"245","severity":1,"message":"268","line":5,"column":45,"nodeType":"247","messageId":"248","endLine":5,"endColumn":51},{"ruleId":"245","severity":1,"message":"257","line":32,"column":11,"nodeType":"247","messageId":"248","endLine":32,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":62,"column":21,"nodeType":"271","endLine":63,"endColumn":63},{"ruleId":"259","severity":1,"message":"260","line":48,"column":60,"nodeType":"261","messageId":"262","endLine":48,"endColumn":62},{"ruleId":"245","severity":1,"message":"258","line":60,"column":47,"nodeType":"247","messageId":"248","endLine":60,"endColumn":69},{"ruleId":"263","severity":1,"message":"264","line":187,"column":101,"nodeType":"265","endLine":187,"endColumn":113},{"ruleId":"259","severity":1,"message":"260","line":188,"column":123,"nodeType":"261","messageId":"262","endLine":188,"endColumn":125},{"ruleId":"259","severity":1,"message":"260","line":197,"column":123,"nodeType":"261","messageId":"262","endLine":197,"endColumn":125},{"ruleId":"263","severity":1,"message":"264","line":238,"column":72,"nodeType":"265","endLine":238,"endColumn":108},{"ruleId":"245","severity":1,"message":"266","line":4,"column":17,"nodeType":"247","messageId":"248","endLine":4,"endColumn":20},{"ruleId":"245","severity":1,"message":"272","line":5,"column":16,"nodeType":"247","messageId":"248","endLine":5,"endColumn":26},{"ruleId":"245","severity":1,"message":"273","line":9,"column":17,"nodeType":"247","messageId":"248","endLine":9,"endColumn":20},{"ruleId":"245","severity":1,"message":"274","line":9,"column":33,"nodeType":"247","messageId":"248","endLine":9,"endColumn":40},{"ruleId":"245","severity":1,"message":"275","line":15,"column":7,"nodeType":"247","messageId":"248","endLine":15,"endColumn":12},{"ruleId":"245","severity":1,"message":"276","line":19,"column":9,"nodeType":"247","messageId":"248","endLine":19,"endColumn":16},{"ruleId":"277","severity":1,"message":"278","line":28,"column":35,"nodeType":"279","messageId":"280","endLine":28,"endColumn":37},{"ruleId":"259","severity":1,"message":"281","line":29,"column":84,"nodeType":"261","messageId":"262","endLine":29,"endColumn":86},{"ruleId":"259","severity":1,"message":"281","line":32,"column":93,"nodeType":"261","messageId":"262","endLine":32,"endColumn":95},{"ruleId":"245","severity":1,"message":"257","line":43,"column":11,"nodeType":"247","messageId":"248","endLine":43,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":104,"column":15,"nodeType":"271","endLine":105,"endColumn":57},{"ruleId":"259","severity":1,"message":"281","line":112,"column":23,"nodeType":"261","messageId":"262","endLine":112,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":33,"column":28,"nodeType":"261","messageId":"262","endLine":33,"endColumn":30},{"ruleId":"245","severity":1,"message":"282","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":13},{"ruleId":"245","severity":1,"message":"283","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":15},{"ruleId":"245","severity":1,"message":"266","line":4,"column":17,"nodeType":"247","messageId":"248","endLine":4,"endColumn":20},{"ruleId":"245","severity":1,"message":"284","line":4,"column":22,"nodeType":"247","messageId":"248","endLine":4,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":14},{"ruleId":"245","severity":1,"message":"285","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":25},{"ruleId":"245","severity":1,"message":"286","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":16},{"ruleId":"245","severity":1,"message":"287","line":9,"column":10,"nodeType":"247","messageId":"248","endLine":9,"endColumn":15},{"ruleId":"245","severity":1,"message":"273","line":9,"column":17,"nodeType":"247","messageId":"248","endLine":9,"endColumn":20},{"ruleId":"245","severity":1,"message":"288","line":9,"column":22,"nodeType":"247","messageId":"248","endLine":9,"endColumn":31},{"ruleId":"245","severity":1,"message":"274","line":9,"column":33,"nodeType":"247","messageId":"248","endLine":9,"endColumn":40},{"ruleId":"245","severity":1,"message":"289","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":24},{"ruleId":"245","severity":1,"message":"275","line":14,"column":7,"nodeType":"247","messageId":"248","endLine":14,"endColumn":12},{"ruleId":"245","severity":1,"message":"290","line":15,"column":10,"nodeType":"247","messageId":"248","endLine":15,"endColumn":17},{"ruleId":"245","severity":1,"message":"291","line":15,"column":19,"nodeType":"247","messageId":"248","endLine":15,"endColumn":29},{"ruleId":"245","severity":1,"message":"292","line":16,"column":10,"nodeType":"247","messageId":"248","endLine":16,"endColumn":17},{"ruleId":"245","severity":1,"message":"293","line":16,"column":19,"nodeType":"247","messageId":"248","endLine":16,"endColumn":29},{"ruleId":"245","severity":1,"message":"294","line":18,"column":10,"nodeType":"247","messageId":"248","endLine":18,"endColumn":14},{"ruleId":"245","severity":1,"message":"295","line":18,"column":16,"nodeType":"247","messageId":"248","endLine":18,"endColumn":23},{"ruleId":"253","severity":1,"message":"296","line":23,"column":6,"nodeType":"255","endLine":23,"endColumn":8,"suggestions":"297"},{"ruleId":"245","severity":1,"message":"298","line":25,"column":9,"nodeType":"247","messageId":"248","endLine":25,"endColumn":21},{"ruleId":"259","severity":1,"message":"281","line":71,"column":23,"nodeType":"261","messageId":"262","endLine":71,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":110,"column":59,"nodeType":"261","messageId":"262","endLine":110,"endColumn":61},{"ruleId":"259","severity":1,"message":"260","line":114,"column":32,"nodeType":"261","messageId":"262","endLine":114,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":118,"column":59,"nodeType":"261","messageId":"262","endLine":118,"endColumn":61},{"ruleId":"259","severity":1,"message":"260","line":122,"column":32,"nodeType":"261","messageId":"262","endLine":122,"endColumn":34},{"ruleId":"245","severity":1,"message":"299","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"300","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":16},{"ruleId":"269","severity":1,"message":"301","line":103,"column":53,"nodeType":"271","endLine":104,"endColumn":91},{"ruleId":"245","severity":1,"message":"299","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"300","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":16},{"ruleId":"245","severity":1,"message":"302","line":5,"column":13,"nodeType":"247","messageId":"248","endLine":5,"endColumn":16},{"ruleId":"245","severity":1,"message":"258","line":49,"column":31,"nodeType":"247","messageId":"248","endLine":49,"endColumn":53},{"ruleId":"263","severity":1,"message":"264","line":164,"column":60,"nodeType":"265","endLine":164,"endColumn":96},{"ruleId":"263","severity":1,"message":"264","line":218,"column":108,"nodeType":"265","endLine":218,"endColumn":120},{"ruleId":"245","severity":1,"message":"303","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"300","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":14},{"ruleId":"259","severity":1,"message":"260","line":29,"column":34,"nodeType":"261","messageId":"262","endLine":29,"endColumn":36},{"ruleId":"259","severity":1,"message":"260","line":33,"column":41,"nodeType":"261","messageId":"262","endLine":33,"endColumn":43},{"ruleId":"245","severity":1,"message":"303","line":1,"column":16,"nodeType":"247","messageId":"248","endLine":1,"endColumn":24},{"ruleId":"245","severity":1,"message":"304","line":1,"column":26,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"245","severity":1,"message":"300","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":6,"column":9,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"259","severity":1,"message":"260","line":49,"column":54,"nodeType":"261","messageId":"262","endLine":49,"endColumn":56},{"ruleId":"259","severity":1,"message":"260","line":51,"column":61,"nodeType":"261","messageId":"262","endLine":51,"endColumn":63},{"ruleId":"259","severity":1,"message":"260","line":53,"column":48,"nodeType":"261","messageId":"262","endLine":53,"endColumn":50},{"ruleId":"245","severity":1,"message":"305","line":2,"column":9,"nodeType":"247","messageId":"248","endLine":2,"endColumn":15},{"ruleId":"245","severity":1,"message":"306","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":27},{"ruleId":"245","severity":1,"message":"307","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":22},{"ruleId":"245","severity":1,"message":"308","line":35,"column":7,"nodeType":"247","messageId":"248","endLine":35,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":54,"column":32,"nodeType":"261","messageId":"262","endLine":54,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":56,"column":37,"nodeType":"261","messageId":"262","endLine":56,"endColumn":39},{"ruleId":"259","severity":1,"message":"260","line":62,"column":30,"nodeType":"261","messageId":"262","endLine":62,"endColumn":32},{"ruleId":"245","severity":1,"message":"309","line":67,"column":12,"nodeType":"247","messageId":"248","endLine":67,"endColumn":20},{"ruleId":"245","severity":1,"message":"310","line":67,"column":36,"nodeType":"247","messageId":"248","endLine":67,"endColumn":42},{"ruleId":"263","severity":1,"message":"264","line":94,"column":33,"nodeType":"265","endLine":94,"endColumn":56},{"ruleId":"245","severity":1,"message":"311","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":14},{"ruleId":"277","severity":1,"message":"278","line":28,"column":41,"nodeType":"279","messageId":"280","endLine":28,"endColumn":43},{"ruleId":"277","severity":1,"message":"278","line":39,"column":35,"nodeType":"279","messageId":"280","endLine":39,"endColumn":37},{"ruleId":"245","severity":1,"message":"312","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"245","severity":1,"message":"313","line":2,"column":24,"nodeType":"247","messageId":"248","endLine":2,"endColumn":28},{"ruleId":"245","severity":1,"message":"314","line":19,"column":13,"nodeType":"247","messageId":"248","endLine":19,"endColumn":20},{"ruleId":"245","severity":1,"message":"315","line":47,"column":13,"nodeType":"247","messageId":"248","endLine":47,"endColumn":17},{"ruleId":"245","severity":1,"message":"316","line":5,"column":3,"nodeType":"247","messageId":"248","endLine":5,"endColumn":15},{"ruleId":"245","severity":1,"message":"317","line":6,"column":3,"nodeType":"247","messageId":"248","endLine":6,"endColumn":22},{"ruleId":"245","severity":1,"message":"318","line":7,"column":3,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"245","severity":1,"message":"319","line":8,"column":3,"nodeType":"247","messageId":"248","endLine":8,"endColumn":15},{"ruleId":"245","severity":1,"message":"320","line":9,"column":3,"nodeType":"247","messageId":"248","endLine":9,"endColumn":18},{"ruleId":"245","severity":1,"message":"321","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":23},{"ruleId":"245","severity":1,"message":"322","line":22,"column":10,"nodeType":"247","messageId":"248","endLine":22,"endColumn":24},{"ruleId":"245","severity":1,"message":"323","line":23,"column":10,"nodeType":"247","messageId":"248","endLine":23,"endColumn":16},{"ruleId":"245","severity":1,"message":"324","line":24,"column":10,"nodeType":"247","messageId":"248","endLine":24,"endColumn":16},{"ruleId":"245","severity":1,"message":"325","line":25,"column":10,"nodeType":"247","messageId":"248","endLine":25,"endColumn":22},{"ruleId":"253","severity":1,"message":"326","line":39,"column":5,"nodeType":"255","endLine":39,"endColumn":7,"suggestions":"327"},{"ruleId":"245","severity":1,"message":"328","line":61,"column":9,"nodeType":"247","messageId":"248","endLine":61,"endColumn":25},{"ruleId":"329","severity":1,"message":"330","line":82,"column":9,"nodeType":"271","endLine":82,"endColumn":59},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["331"],"no-negated-in-lhs",["332"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["333"],"'res' is assigned a value but never used.","'handleCheckboxesChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Tag' is defined but never used.","'useLocation' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'withRouter' is defined but never used.","'end' is defined but never used.","'pattern' is defined but never used.","'data1' is assigned a value but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'axios' is defined but never used.","'Table' is defined but never used.","'Space' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlus' is defined but never used.","'parse' is defined but never used.","'toSeconds' is defined but never used.","'generateCalendar' is defined but never used.","'allData' is assigned a value but never used.","'setAllData' is assigned a value but never used.","'deleted' is assigned a value but never used.","'setDeleted' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array. If 'setProjectData' needs the current value of 'props.location.state', you can also switch to useReducer instead of useState and read 'props.location.state' in the reducer.",["334"],"'updateValues' is assigned a value but never used.","'Loader' is defined but never used.","'ReactDOM' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Yup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'validationSchemaFor' is defined but never used.","'AttachFileIcon' is defined but never used.","'iconStyling' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'date' is defined but never used.","'react' is defined but never used.","'Line' is defined but never used.","'options' is assigned a value but never used.","'line' is assigned a value but never used.","'UserOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'DesktopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'faBusinessTime' is defined but never used.","'faRoad' is defined but never used.","'faCogs' is defined but never used.","'faUserCircle' is defined but never used.","React Hook useEffect has missing dependencies: 'role' and 'user.user.role'. Either include them or remove the dependency array.",["335"],"'handleUsersClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [id]",{"range":"342","text":"343"},"Update the dependencies array to be: [props.location.state]",{"range":"344","text":"345"},"Update the dependencies array to be: [role, user.user.role]",{"range":"346","text":"347"},[783,785],"[id]",[1107,1109],"[props.location.state]",[1375,1377],"[role, user.user.role]"]